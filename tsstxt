
     
//       const controls = new THREE.OrbitControls(camera, renderer.domElement);
// controls.enableDamping = true;
// controls.dampingFactor = 0.05;
// controls.enableZoom = false;
// controls.autoRotate = true;
// controls.autoRotateSpeed = 0.5;
// controls.rotateSpeed = 0.5;
// controls.maxPolarAngle = Math.PI / 2;

        // Obtener el ancho y alto de la ventana del navegador
var width = window.innerWidth;
var height = window.innerHeight;

// Crear la escena
var scene = new THREE.Scene();

// Crear la cÃ¡mara
var camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 1000);
camera.position.z = 10;

// Crear el renderizador
var renderer = new THREE.WebGLRenderer({ antialias: true });
renderer.setSize(width, height);
document.body.appendChild(renderer.domElement);

// Crear una esfera
var geometry = new THREE.SphereGeometry(1, 32, 32);
var material = new THREE.MeshBasicMaterial({ color: 0xa0a0a0 });
var sphere = new THREE.Mesh(geometry, material);

// Agregar una luz puntual a la escena
var light = new THREE.PointLight(0xa0a0a0, 1, 100);
light.position.set(0, 0, 10);
scene.add(light);
scene.background = new THREE.Color(0xa0a0a0);
scene.fog = new THREE.Fog(0xa0a0a0, 10, 50);
    var hemiLight = new THREE.HemisphereLight(0xffffff, 0x444444);
    hemiLight.position.set(0, 20, 0);
    scene.add(hemiLight);
    var dirLight = new THREE.DirectionalLight(0xffffff);
    dirLight.position.set(-3, 20, -15);
    dirLight.castShadow = true;
    dirLight.shadow.camera.top = 2;
    dirLight.shadow.camera.bottom = -2;
    dirLight.shadow.camera.left = -2;
    dirLight.shadow.camera.right = 2;
    dirLight.shadow.camera.near = 0.1;
    dirLight.shadow.camera.far = 40;

    dirLight.shadow.mapSize.height=2048;
    dirLight.shadow.mapSize.height=2048;
    scene.add(dirLight);

    camera.lookAt(new THREE.Vector3(0, 0, 0));

    var mesh = new THREE.Mesh(new THREE.PlaneBufferGeometry(100, 100), new THREE.MeshPhongMaterial({
        color: 0x999999,
        depthWrite: false
    }));
    mesh.rotation.x = -Math.PI / 2;
    mesh.receiveShadow = true;
    scene.add(mesh);
//agregar glb
const loaderCaja = new THREE.GLTFLoader();

// Cargar el archivo GLTF
loaderCaja.load('images/glb/cajaclaros.glb', function(gltfCaja) {
  todo=gltfCaja;
        modelCaja = gltfCaja.scenes[0];
        modelCaja.traverse(function (object) {
            if (object instanceof THREE.Mesh) {
                object.castShadow = true;
            }
        });
        // modelCaja.scale.set(0.005, 0.005, 0.005);
        modelCaja.children[0].children[0].position.y=0.28; 
        modelCaja.children[0].children[0].children[1].scale.set(2.4,2.4,4.21);/// suelo 


        modelCaja.name ="TABLA_CAJAS";
        scene.add(modelCaja);
       // skeleton = new THREE.SkeletonHelper(modelCaja);
        //cargar_archivos(); ///////////////////////
        // modelCaja.children[0].children[0].rotation.y = 180 * (Math.PI / 180); ////rotar cajas para que caja X verde este arriba

       modelCaja.children[0].children[0].children[1].receiveShadow=true;
       // modelCaja.children[0].position.y = 39;
       // modelCaja.children[0].children[1].scale.set(3, 3, 3); ///suelo
        // CAJAS_ARRAY = modelCaja.children[0].children[0].children;  /// 0 1 => MADERAS   2=>caja verde  ,  3=> 32, 4 => 15 ...
           //CAJAS_ARRAY=modelCaja.children[0].children[0].children[0].children;
       // cajax=modelCaja.children[0].children[0].children[2];
});

//controles
/*
const controls = new THREE.OrbitControls(camera, renderer.domElement);
controls.enableDamping = true;
controls.dampingFactor = 0.05;
controls.enableZoom = false;
controls.autoRotate = true;
controls.autoRotateSpeed = 0.5;
controls.rotateSpeed = 0.5;
controls.maxPolarAngle = Math.PI / 2;*/

// Renderizar la escena
function render() {
  requestAnimationFrame(render);
  //controls.update()
  renderer.render(scene, camera);
}
render();

